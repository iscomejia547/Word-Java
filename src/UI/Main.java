/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import Data.TextModel;
import Data.FileSystemTree;
import someHelp.ClosableTabbedPane;

import java.awt.*;
import java.awt.event.MouseEvent;
import java.beans.PropertyChangeEvent;
import java.io.File;


import javax.swing.*;
import java.io.IOException;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author jf_me
 */
public class Main extends javax.swing.JFrame {
    private TextModel mod;//modelo de lectura y escritura de texto
    private File folder;//folder por defecto
    private FileSystemTree nav;//modelo de navegacion por medio del tree 
    private javax.swing.JFileChooser chooser;//file chooser
    /**
     * Creates new form Main
     */
    public Main() {
        folder=new File("files/");
        nav=new FileSystemTree(folder);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        FileMenu = new javax.swing.JPopupMenu();
        editmnitem = new javax.swing.JMenuItem();
        renamemnitem = new javax.swing.JMenuItem();
        deletemnitem = new javax.swing.JMenuItem();
        centralPane = new javax.swing.JPanel();
        treePane = new javax.swing.JPanel();
        TreePane = new javax.swing.JScrollPane();
        tree = new javax.swing.JTree();
        txteditorPane = new javax.swing.JPanel();
        mainTab = new ClosableTabbedPane();
        MainMenu = new javax.swing.JMenuBar();
        filemn = new javax.swing.JMenu();
        newmnitem = new javax.swing.JMenuItem();
        openmnitem = new javax.swing.JMenuItem();
        savemnitem = new javax.swing.JMenuItem();
        optmn = new javax.swing.JMenu();

        editmnitem.setText("Editar");
        editmnitem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editmnitemActionPerformed(evt);
            }
        });
        FileMenu.add(editmnitem);

        renamemnitem.setText("Renombrar");
        renamemnitem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                renamemnitemActionPerformed(evt);
            }
        });
        FileMenu.add(renamemnitem);

        deletemnitem.setText("Eliminar");
        deletemnitem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletemnitemActionPerformed(evt);
            }
        });
        FileMenu.add(deletemnitem);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Word++");
        setExtendedState(6);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        centralPane.setLayout(new java.awt.BorderLayout());

        treePane.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                treePaneMouseEntered(evt);
            }
        });
        treePane.setLayout(new java.awt.BorderLayout());

        tree.setModel(nav);
        tree.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                treeMouseClicked(evt);
            }
        });
        TreePane.setViewportView(tree);

        treePane.add(TreePane, java.awt.BorderLayout.CENTER);

        centralPane.add(treePane, java.awt.BorderLayout.LINE_START);

        txteditorPane.setLayout(new java.awt.BorderLayout());

        mainTab.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                mainTabPropertyChange(evt);
            }
        });
        txteditorPane.add(mainTab, java.awt.BorderLayout.CENTER);

        centralPane.add(txteditorPane, java.awt.BorderLayout.CENTER);

        getContentPane().add(centralPane, java.awt.BorderLayout.CENTER);

        filemn.setText("Archivo");

        newmnitem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        newmnitem.setText("Nuevo");
        newmnitem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newmnitemActionPerformed(evt);
            }
        });
        filemn.add(newmnitem);

        openmnitem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        openmnitem.setText("Abrir");
        openmnitem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openmnitemActionPerformed(evt);
            }
        });
        filemn.add(openmnitem);

        savemnitem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        savemnitem.setText("Guardar");
        savemnitem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                savemnitemActionPerformed(evt);
            }
        });
        filemn.add(savemnitem);

        MainMenu.add(filemn);

        optmn.setText("Opciones");
        MainMenu.add(optmn);

        setJMenuBar(MainMenu);

        setSize(new java.awt.Dimension(719, 467));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void newmnitemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newmnitemActionPerformed
        TextPane tp=new TextPane();
        mainTab.addTab("Nuevo", null, tp, "Archivo");

    }//GEN-LAST:event_newmnitemActionPerformed
    
    private void mainTabPropertyChange(java.beans.PropertyChangeEvent evt){
        //void
    }

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        chooser=new JFileChooser();
        chooser.setCurrentDirectory(folder);
        chooser.setFileFilter(new FileNameExtensionFilter("Archivo de texto plano", ".txt"));
    }//GEN-LAST:event_formWindowOpened

    private void openmnitemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openmnitemActionPerformed
        chooser.setApproveButtonText("Abrir");
        chooser.showOpenDialog(this);
        String path=chooser.getSelectedFile().getPath();
        openFile(path);
    }//GEN-LAST:event_openmnitemActionPerformed

    private void openFile(String path){
        String text="";
        if(path==null || path.isEmpty()){
            return;
        }
        try {
            mod=new TextModel(path);
            text=mod.readFile();
        } catch (IOException e) {
            e.printStackTrace();
        }
        TextPane tp=new TextPane();
        tp.setText(text);
        mainTab.addTab(mod.getFile().getName(), null, tp , "archivo");
    }

    private void savemnitemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_savemnitemActionPerformed
        TextPane tp= (TextPane) mainTab.getSelectedComponent();
        String text=tp.getText();int index=mainTab.getSelectedIndex();
        if(mod==null){
            saveFromNew(text);
            mainTab.setTitleAt(index, mod.getFile().getName());
            return;
        }else if(mainTab.getTitleAt(index).equals(mod.getFile().getName())){
            try {
                mod.writeFile(text);
                JOptionPane.showMessageDialog(this, "Se ha guardado correctamente", "", JOptionPane.INFORMATION_MESSAGE);
            } catch (IOException e) {
                e.printStackTrace();
            }
        }else{
            saveFromNew(text);
            mainTab.setTitleAt(index, mod.getFile().getName());
        }
        updateNav();
    }//GEN-LAST:event_savemnitemActionPerformed

    public String validateroute(String f){
        String route="";
        if(!f.contains(".txt")){
            route=f+".txt";
            return route;
        }
        return f;
    }

    private void treePaneMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_treePaneMouseEntered
        //void
    }//GEN-LAST:event_treePaneMouseEntered

    private void treeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_treeMouseClicked
        if(tree.getSelectionCount()!=1){
            return;
        }
        if(evt.getButton()==MouseEvent.BUTTON3){
            Point actual=MouseInfo.getPointerInfo().getLocation();
            FileMenu.show(this, actual.x, actual.y);
        }
    }//GEN-LAST:event_treeMouseClicked

    private void editmnitemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editmnitemActionPerformed
        String path=tree.getSelectionPath().toString().replaceAll("[\\[\\]]", "").replace(", ", "\\");
        //JOptionPane.showMessageDialog(this, path);
        openFile(path);
    }//GEN-LAST:event_editmnitemActionPerformed

    private void renamemnitemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_renamemnitemActionPerformed
        String path=tree.getSelectionPath().toString().replaceAll("[\\[\\]]", "").replace(", ", "\\");
        File f=new File(path);
        String newname=JOptionPane.showInputDialog(this, "Escriba un nuevo nombre");
        if(newname==null || newname.isEmpty()){
            return;
        }
        //JOptionPane.showMessageDialog(this, path.replaceAll(f.getName(), newname));
        f.renameTo(new File(path.replaceAll(f.getName(), newname)+".txt"));
        updateNav();
    }//GEN-LAST:event_renamemnitemActionPerformed

    private void deletemnitemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletemnitemActionPerformed
        String path=tree.getSelectionPath().toString().replaceAll("[\\[\\]]", "").replace(", ", "\\");
        File f=new File(path);
        if(f.delete()){
            JOptionPane.showMessageDialog(this, "Se ha eliminado el archivo", "", JOptionPane.INFORMATION_MESSAGE);
        }
        updateNav();
    }//GEN-LAST:event_deletemnitemActionPerformed

    public void updateNav(){
        nav=new FileSystemTree(folder);
        tree.setModel(nav);
    }

    public void saveFromNew(String text){
        chooser.setApproveButtonText("Guardar");
        chooser.showSaveDialog(this);
        String p=chooser.getSelectedFile().getPath();
        p=validateroute(p);
        File f=new File(p);
        if(f==null){
            return;
        }
        try {
            mod=new TextModel(f);
            if(mod.writeFile(text)){
                JOptionPane.showMessageDialog(this, "Se ha guardado correctamente", "", JOptionPane.INFORMATION_MESSAGE);
                }
            } catch (IOException e) {
                e.printStackTrace();
            }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Metal".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPopupMenu FileMenu;
    private javax.swing.JMenuBar MainMenu;
    private javax.swing.JScrollPane TreePane;
    private javax.swing.JPanel centralPane;
    private javax.swing.JMenuItem deletemnitem;
    private javax.swing.JMenuItem editmnitem;
    private javax.swing.JMenu filemn;
    private ClosableTabbedPane mainTab;
    private javax.swing.JMenuItem newmnitem;
    private javax.swing.JMenuItem openmnitem;
    private javax.swing.JMenu optmn;
    private javax.swing.JMenuItem renamemnitem;
    private javax.swing.JMenuItem savemnitem;
    private javax.swing.JTree tree;
    private javax.swing.JPanel treePane;
    private javax.swing.JPanel txteditorPane;
    // End of variables declaration//GEN-END:variables
}
